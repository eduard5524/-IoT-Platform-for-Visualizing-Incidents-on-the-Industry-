var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.114,1,0.761]],["body/components/AppComponent.html",[0,0.209,1,1.268,2,0.457,3,0.391,4,1.215,5,1.215,6,1.215,7,0.272,8,2.362,9,0.526,10,3.898,11,2.087,12,2.885,13,4.778,14,3.927,15,3.927,16,3.204,17,2.371,18,3.927,19,1.215,20,2.279,21,1.791,22,2.371,23,1.85,24,3.927,25,1.648,26,3.927,27,0.526,28,1.648,29,5.359,30,1.85,31,0.601,32,0.044,33,1.748,34,1.748,35,2.371,36,3.204,37,0.681,38,2.896,39,3.204,40,3.927,41,2.371,42,3.927,43,0.457,44,0.457,45,0.33,46,0.272,47,0.968,48,1.648,49,1.648,50,1.648,51,2.005,52,1.215,53,0.81,54,1.215,55,0.681,56,1.215,57,0.768,58,1.215,59,0.768,60,1.215,61,0.681,62,0.768,63,1.215,64,0.768,65,0.272,66,1.215,67,0.03,68,0.03]],["title/modules/AppModule.html",[69,1.203,70,1.731]],["body/modules/AppModule.html",[0,0.127,1,1.407,2,0.343,3,0.294,7,0.301,21,0.727,32,0.045,41,1.313,43,0.882,44,0.343,45,0.434,46,0.204,47,0.727,55,1.103,57,1.244,59,1.244,61,1.103,62,1.244,64,1.244,65,0.204,67,0.024,68,0.024,69,1.345,70,3.435,71,1.51,72,3.656,73,2.644,74,3.112,75,1.774,76,1.774,77,1.774,78,1.774,79,1.774,80,2.492,81,2.831,82,2.831,83,2.615,84,1.51,85,1.51,86,1.51,87,2.174,88,1.794,89,1.774,90,1.774,91,2.174,92,2.615,93,3.206,94,1.774,95,2.174,96,2.174,97,2.174,98,1.774,99,1.774,100,2.174,101,2.174,102,1.51,103,1.345,104,3.206,105,1.774,106,2.615,107,2.174,108,2.174,109,2.174,110,2.174,111,1.774,112,3.206,113,1.774,114,1.774,115,2.174,116,2.174,117,1.774,118,3.808,119,3.206,120,1.155,121,2.174,122,2.174,123,3.206,124,1.51,125,2.174,126,1.51,127,1.313,128,1.024,129,1.51,130,1.345,131,1.51,132,1.155,133,0.727,134,1.51,135,1.155,136,1.935,137,0.648,138,1.51,139,2.174,140,2.174,141,2.174,142,2.174,143,1.774,144,3.206,145,3.206,146,1.703]],["title/modules/AppRoutingModule.html",[69,1.203,80,1.523]],["body/modules/AppRoutingModule.html",[0,0.201,2,0.533,3,0.457,7,0.408,16,2.756,32,0.044,37,0.795,39,2.756,43,0.848,44,0.533,45,0.495,46,0.317,55,1.023,61,1.023,65,0.408,67,0.033,68,0.033,69,1.417,80,2.311,88,1.592,103,1.417,106,3.548,111,2.756,117,2.756,130,1.417,133,1.129,147,3.379,148,3.379,149,4.349,150,2.013,151,1.795,152,3.339,153,3.379,154,3.379,155,2.626,156,1.607,157,2.346,158,3.379,159,2.311,160,3.379,161,2.756,162,3.548,163,1.795,164,2.346,165,2.756,166,1.795,167,4.809,168,4.809,169,4.809,170,3.379,171,3.379]],["title/guards/AuthGuard.html",[152,1.99,172,1.731]],["body/guards/AuthGuard.html",[2,0.457,3,0.391,7,0.418,9,0.714,12,3.109,22,1.748,27,0.526,31,0.815,32,0.044,37,0.924,43,0.619,44,0.457,45,0.33,46,0.272,53,0.714,65,0.369,67,0.03,68,0.03,133,0.968,137,1.489,138,2.011,146,2.087,150,2.116,151,1.539,152,3.318,155,1.748,156,1.313,162,3.898,163,2.539,172,2.691,173,2.896,174,3.204,175,4.778,176,3.927,177,2.087,178,3.898,179,1.313,180,0.863,181,2.896,182,2.896,183,1.171,184,1.313,185,3.927,186,4.778,187,5.15,188,4.778,189,2.896,190,3.927,191,1.036,192,2.896,193,2.362,194,0.968,195,2.362,196,2.371,197,2.896,198,1.539,199,2.896,200,2.896,201,2.362,202,2.896,203,1.748]],["title/injectables/AuthenticationService.html",[191,0.595,204,1.203]],["body/injectables/AuthenticationService.html",[0,0.119,2,0.315,3,0.27,7,0.187,9,0.547,22,1.205,27,0.363,28,1.262,30,2.286,31,0.751,32,0.045,37,1.142,43,0.635,44,0.315,45,0.343,46,0.187,53,0.902,65,0.514,67,0.023,68,0.023,88,0.94,103,1.262,120,1.061,126,1.386,127,1.205,128,0.94,129,1.386,130,2.231,131,2.513,133,1.005,136,2.433,137,1.509,150,1.126,156,1.005,163,1.598,165,3.706,166,1.923,177,1.598,178,3.287,179,1.21,180,0.897,183,1.201,184,1.21,191,0.624,193,1.628,196,1.816,204,1.262,205,1.386,206,2.454,207,1.598,208,3.008,209,1.205,210,4.543,211,4.029,212,4.029,213,2.433,214,3.008,215,1.628,216,3.287,217,4.715,218,3.008,219,2.089,220,1.996,221,3.155,222,1.996,223,3.959,224,1.996,225,2.433,226,3.008,227,3.513,228,1.996,229,4.543,230,2.14,231,1.816,232,1.996,233,2.454,234,4.029,235,4.029,236,1.598,237,3.008,238,1.996,239,1.705,240,2.454,241,2.089,242,1.386,243,1.996,244,1.996,245,1.417,246,3.008,247,3.008,248,1.996,249,1.996,250,1.996,251,1.996,252,3.008,253,1.996,254,1.996,255,1.996]],["title/components/ContentsComponent.html",[0,0.114,55,0.674]],["body/components/ContentsComponent.html",[0,0.217,1,0.791,2,0.47,3,0.403,4,1.251,5,1.251,6,1.251,7,0.28,9,0.542,11,2.129,19,1.251,20,2.293,21,1.803,23,1.887,25,1.681,32,0.045,43,0.47,44,0.47,45,0.34,46,0.28,47,0.997,48,1.681,49,2.029,50,1.681,51,2.029,52,1.251,53,0.822,54,1.251,55,1.138,56,1.251,57,0.791,58,1.251,59,0.791,60,1.251,61,0.702,62,0.791,63,1.251,64,0.791,65,0.28,66,1.251,67,0.03,68,0.03,180,0.889,194,1.339,256,2.433,257,4.006,258,2.782,259,2.419,260,2.782,261,3.268,262,3.268,263,4.006,264,4.006,265,3.268,266,2.131,267,3.268,268,4.006,269,4.006,270,2.419,271,1.405]],["title/interceptors/ErrorInterceptor.html",[81,1.731,272,1.731]],["body/interceptors/ErrorInterceptor.html",[2,0.475,3,0.407,7,0.283,9,0.548,27,0.548,31,0.837,32,0.044,37,0.949,43,0.798,44,0.475,45,0.343,46,0.283,53,0.733,67,0.031,68,0.031,81,2.435,120,1.601,137,1.612,166,1.601,179,1.348,180,0.898,183,1.203,184,1.348,191,0.837,194,1.007,195,2.458,204,2.186,213,2.745,230,2.385,272,1.819,273,3.013,274,4.033,275,3.515,276,4.856,277,4.547,278,3.29,279,4.033,280,3.29,281,2.458,282,3.013,283,3.29,284,3.961,285,3.709,286,3.961,287,3.013,288,2.092,289,3.709,290,2.458,291,3.29,292,3.013,293,2.092,294,3.013,295,3.013,296,1.819,297,3.013,298,3.013,299,3.013,300,2.092,301,3.013,302,3.013,303,3.013,304,3.013]],["title/components/FooterComponent.html",[0,0.114,57,0.761]],["body/components/FooterComponent.html",[0,0.217,1,0.715,2,0.425,3,0.364,4,1.13,5,1.13,6,1.13,7,0.403,9,0.49,11,1.986,19,1.13,20,2.244,21,1.761,23,1.761,25,1.568,32,0.044,35,2.256,43,0.425,44,0.425,45,0.307,46,0.253,47,0.9,48,1.568,49,1.568,50,1.568,51,1.944,52,1.13,53,0.78,54,1.13,55,0.634,56,1.13,57,1.23,58,1.13,59,0.715,60,1.13,61,0.634,62,0.715,63,1.13,64,0.715,65,0.253,66,1.13,67,0.028,68,0.028,155,2.256,156,1.684,180,0.803,194,1.249,260,3.76,262,4.297,266,2.022,270,2.256,271,1.269,305,2.197,306,4.635,307,3.737,308,3.737,309,3.737,310,4.635,311,4.635,312,3.737,313,3.048,314,3.737,315,3.737,316,3.737,317,3.737,318,3.737,319,3.737,320,3.737,321,3.737,322,3.737]],["title/components/HeaderComponent.html",[0,0.114,59,0.761]],["body/components/HeaderComponent.html",[0,0.198,1,0.638,2,0.379,3,0.325,4,1.009,5,1.009,6,1.009,7,0.226,9,0.437,11,1.834,12,3.02,19,1.009,20,2.186,21,1.711,23,1.626,25,1.448,27,0.437,31,0.499,32,0.044,35,2.084,37,0.812,43,0.636,44,0.379,45,0.274,46,0.226,47,0.804,48,1.448,49,1.448,50,1.448,51,1.849,52,1.009,53,0.801,54,1.009,55,0.566,56,1.009,57,0.638,58,1.009,59,1.17,60,1.009,61,0.566,62,0.638,63,1.009,64,0.638,65,0.226,66,1.009,67,0.026,68,0.026,133,1.154,137,1.203,150,1.747,151,1.279,163,1.834,179,1.473,180,1.029,183,0.717,184,0.804,191,0.716,194,1.154,198,1.834,204,2.147,209,2.661,213,3.265,233,3.596,236,1.279,245,1.901,259,2.661,266,1.901,270,1.453,271,1.134,281,1.963,296,1.453,300,1.671,323,1.963,324,3.451,325,5.118,326,2.815,327,4.408,328,3.451,329,3.451,330,3.451,331,3.451,332,3.451,333,3.596,334,2.406,335,2.406,336,2.406,337,3.451,338,3.451,339,3.451]],["title/interceptors/JwtInterceptor.html",[82,1.731,272,1.731]],["body/interceptors/JwtInterceptor.html",[0,0.19,2,0.364,3,0.312,7,0.217,9,0.42,27,0.42,31,0.479,32,0.044,37,0.543,43,0.622,44,0.364,45,0.263,46,0.217,53,0.42,65,0.314,67,0.025,68,0.025,71,1.578,82,2.022,88,1.578,98,3.528,103,1.814,120,1.227,127,2.772,130,2.198,132,2.298,133,1.445,134,2.326,135,1.78,137,0.999,138,1.603,159,2.689,164,2.326,166,1.227,174,2.732,177,1.78,179,1.445,183,0.688,184,0.772,191,0.994,194,0.772,206,2.732,207,2.784,219,3.003,221,2.326,227,2.326,230,2.256,242,2.737,245,1.578,259,2.891,261,2.732,272,1.394,280,3.528,283,2.732,284,3.528,285,3.216,286,3.528,288,3.003,289,3.216,290,1.883,291,2.732,293,1.603,326,2.732,340,2.309,341,3.349,342,3.349,343,3.349,344,3.349,345,3.528,346,2.326,347,3.349,348,2.732,349,3.349,350,2.732,351,3.349,352,3.528,353,3.349,354,2.732,355,2.732,356,2.326,357,3.349,358,3.349,359,3.349,360,3.349,361,3.349,362,3.349,363,3.349,364,2.309,365,3.349,366,3.942,367,2.732,368,2.309,369,1.883,370,1.883,371,2.309,372,2.309,373,2.309,374,2.309]],["title/components/LoginComponent.html",[0,0.114,61,0.674]],["body/components/LoginComponent.html",[0,0.159,1,0.394,2,0.234,3,0.2,4,0.622,5,0.622,6,0.622,7,0.139,9,0.27,10,1.21,12,2.737,17,2.425,19,0.622,20,1.771,21,1.343,25,0.622,27,0.27,28,1.001,30,1.771,31,0.712,32,0.045,33,2.651,34,1.808,37,1.066,43,0.593,44,0.234,45,0.169,46,0.139,47,0.496,48,1.001,49,1.001,50,1.001,51,1.439,52,0.622,53,0.623,54,0.622,55,0.349,56,0.622,57,0.394,58,0.622,59,0.394,60,0.622,61,0.807,62,0.394,63,0.622,64,0.394,65,0.479,66,0.622,67,0.018,68,0.018,84,2.079,102,2.382,124,1.03,130,1.901,133,1.515,137,1.259,146,1.268,150,1.742,151,0.788,156,0.798,157,1.657,159,2.134,163,1.268,164,1.03,177,1.268,179,1.147,180,0.712,183,1.023,184,0.496,191,0.833,194,0.798,198,1.823,201,2.799,203,2.425,204,1.995,213,2.071,221,3.418,227,3.302,230,1.771,231,1.441,236,1.268,245,1.616,266,1.411,271,1.616,275,3.418,278,1.947,288,1.657,296,0.896,300,1.03,333,2.799,375,1.21,376,5.312,377,3.431,378,2.386,379,2.994,380,3.067,381,2.071,382,2.386,383,2.789,384,3.431,385,4.016,386,3.431,387,2.386,388,2.994,389,1.483,390,4.391,391,2.386,392,1.483,393,3.431,394,1.483,395,2.386,396,2.386,397,2.386,398,2.994,399,1.483,400,3.431,401,1.483,402,1.483,403,1.483,404,1.483,405,1.483,406,2.386,407,2.386,408,2.386,409,1.947,410,1.21,411,1.483,412,1.483,413,1.483,414,3.76,415,2.386,416,1.483,417,1.483,418,1.483,419,1.483,420,1.483,421,1.483,422,1.483,423,2.386,424,1.483,425,2.994,426,1.483,427,1.483,428,1.483,429,1.03,430,1.483,431,1.483,432,1.483,433,1.483,434,2.386,435,1.483,436,1.483,437,1.483,438,2.071]],["title/components/SidebarComponent.html",[0,0.114,62,0.761]],["body/components/SidebarComponent.html",[0,0.209,1,0.587,2,0.349,3,0.299,4,0.927,5,0.927,6,0.927,7,0.208,9,0.402,17,2.848,19,0.927,20,2.14,21,1.671,23,1.529,25,1.361,27,0.402,28,1.361,30,2.222,31,0.879,32,0.044,37,1.062,43,0.512,44,0.349,45,0.252,46,0.208,47,0.739,48,1.361,49,1.361,50,1.361,51,1.777,52,0.927,53,1.019,54,0.927,55,0.52,56,0.927,57,0.587,58,0.927,59,0.587,60,0.927,61,0.52,62,1.124,63,0.927,64,0.587,65,0.513,66,0.927,67,0.025,68,0.025,130,1.361,137,0.659,156,1.085,179,1.085,180,0.967,183,0.659,184,0.739,191,0.673,194,1.085,204,2.098,225,3.212,236,1.175,239,1.996,258,3.275,266,1.811,271,1.996,296,1.335,346,3.385,381,1.959,383,2.253,439,1.803,440,3.245,441,3.245,442,3.245,443,3.245,444,3.245,445,2.647,446,3.245,447,3.245,448,4.512,449,2.21,450,3.245,451,2.21,452,3.456,453,2.647,454,2.647,455,2.21,456,2.21,457,3.245,458,2.21,459,2.21,460,2.21,461,2.21,462,3.245,463,3.245]],["title/classes/User.html",[46,0.269,65,0.269]],["body/classes/User.html",[2,0.482,3,0.413,7,0.287,9,0.741,27,0.833,28,1.709,30,2.654,31,1.056,32,0.044,37,1.231,45,0.348,46,0.43,53,0.998,65,0.532,67,0.031,68,0.031,183,0.912,196,3.072,225,3.159,231,3.276,356,2.829,452,3.324,464,2.495,465,2.495,466,4.269,467,4.426,468,3.059,469,5.088,470,3.059,471,4.074,472,3.324,473,4.074,474,3.059,475,3.059,476,3.059]],["title/injectables/UserService.html",[191,0.595,477,1.731]],["body/injectables/UserService.html",[2,0.52,3,0.445,7,0.309,9,0.599,22,1.989,27,0.599,28,1.795,31,0.684,32,0.045,33,1.989,34,1.989,37,1.118,43,0.749,44,0.52,45,0.375,46,0.309,53,0.599,65,0.472,67,0.032,68,0.032,90,2.688,120,1.751,128,1.552,129,2.288,137,1.276,143,3.49,156,1.101,179,1.43,180,1.276,183,0.982,184,1.101,191,0.986,196,1.989,198,2.839,207,2.274,209,1.989,215,2.688,216,4.103,219,2.971,245,1.552,354,2.688,356,2.971,381,2.583,477,2.583,478,2.688,479,5.029,480,4.279,481,3.295,482,3.295,483,3.295,484,2.288,485,3.295,486,3.295,487,3.295,488,3.295]],["title/components/UsersComponent.html",[0,0.114,64,0.761]],["body/components/UsersComponent.html",[0,0.204,1,0.607,2,0.361,3,0.309,4,0.959,5,0.959,6,0.959,7,0.215,9,0.416,11,1.767,19,0.959,20,2.159,21,1.687,23,1.567,25,1.395,27,0.416,28,1.395,31,0.69,32,0.045,37,0.922,43,0.525,44,0.361,45,0.26,46,0.215,47,0.764,48,1.395,49,1.806,50,1.395,51,1.806,52,0.959,53,0.867,54,0.959,55,0.538,56,0.959,57,0.607,58,0.959,59,0.607,60,0.959,61,0.538,62,0.607,63,0.959,64,1.142,65,0.512,66,0.959,67,0.033,68,0.025,88,2.028,103,1.395,132,1.767,137,0.682,156,1.112,159,1.767,179,1.112,180,0.992,183,0.682,184,0.764,191,0.69,194,1.112,207,2.288,225,2.008,230,1.567,231,2.008,236,1.215,239,1.567,245,1.077,265,2.713,266,1.847,271,2.028,346,2.31,381,2.367,383,2.722,429,3.421,453,2.713,467,2.713,472,2.713,477,3.047,489,1.865,490,3.512,491,3.512,492,3.326,493,3.326,494,4.305,495,2.286,496,3.326,497,2.286,498,3.326,499,3.326,500,3.326,501,2.286,502,2.286,503,2.286,504,2.286,505,3.326,506,3.326,507,3.326,508,3.326,509,3.326,510,3.326]],["title/coverage.html",[511,3.182]],["body/coverage.html",[0,0.215,1,0.867,7,0.307,8,2.666,31,0.678,32,0.044,46,0.307,55,0.769,57,0.867,59,0.867,61,0.769,62,0.867,64,0.867,65,0.307,67,0.032,68,0.032,86,2.269,128,2.005,135,1.737,136,1.973,191,0.883,204,1.371,205,2.955,239,2.449,241,2.269,256,2.666,305,2.666,323,2.666,375,2.666,438,1.973,439,2.666,464,2.666,477,1.973,478,2.666,489,2.666,491,2.666,511,2.666,512,3.268,513,3.268,514,3.268,515,5.428,516,3.268,517,5.014,518,3.268,519,3.268,520,3.268,521,3.268,522,3.268,523,3.268,524,3.268,525,3.268,526,3.268,527,3.268,528,5.014,529,5.014,530,3.268,531,3.268,532,2.666,533,2.666,534,3.472,535,2.666,536,2.666,537,3.268]],["title/dependencies.html",[71,1.623,538,2.4]],["body/dependencies.html",[32,0.045,41,2.745,44,0.572,67,0.035,68,0.035,71,1.708,73,2.517,103,1.521,105,3.71,113,3.71,114,3.71,124,2.517,126,2.517,127,3,151,1.926,223,2.957,293,2.517,409,2.957,410,2.957,445,2.957,539,3.625,540,4.625,541,3.625,542,3.625,543,3.625,544,3.625,545,3.625,546,3.625,547,3.625,548,3.625,549,3.625,550,3.625,551,3.625,552,3.625,553,3.625,554,3.625,555,3.625,556,3.625,557,3.625]],["title/miscellaneous/functions.html",[135,1.83,558,1.449]],["body/miscellaneous/functions.html",[27,0.788,32,0.038,65,0.407,67,0.038,68,0.038,86,3.01,130,2.126,131,3.01,132,2.303,133,1.449,134,3.01,135,2.303,136,3.243,558,2.617,559,4.335]],["title/index.html",[27,0.436,454,1.957,560,1.957]],["body/index.html",[0,0.199,3,0.327,7,0.227,9,0.44,17,2.093,21,1.353,32,0.044,35,1.462,36,2.827,45,0.395,53,0.44,65,0.38,67,0.026,68,0.026,71,1.633,74,1.681,88,1.633,89,3.606,92,1.975,94,4.088,99,1.975,102,1.681,103,1.699,128,1.907,132,2.486,133,1.159,146,1.286,155,2.093,156,1.159,157,1.681,159,1.286,161,1.975,166,1.842,172,1.462,177,1.842,198,2.151,203,1.462,207,1.286,209,1.462,230,1.907,240,1.975,258,1.681,259,1.462,260,1.681,267,2.827,313,3.606,345,1.975,348,1.975,350,1.975,352,1.975,355,1.975,380,3.303,429,1.681,438,1.462,465,1.975,466,1.975,484,3.069,490,1.975,536,2.827,540,1.975,560,1.975,561,2.421,562,2.421,563,2.421,564,2.421,565,2.421,566,4.049,567,2.421,568,2.421,569,2.421,570,2.421,571,2.421,572,2.421,573,2.421,574,3.466,575,2.421,576,2.421,577,2.421,578,2.421,579,2.421,580,3.466,581,2.421,582,2.421,583,2.421,584,4.42,585,2.421,586,2.421,587,2.421,588,2.421,589,2.421,590,2.421,591,2.421,592,2.421,593,3.606,594,2.421,595,2.421,596,4.42,597,3.466,598,2.421,599,3.466,600,3.466,601,2.421,602,2.421,603,2.421,604,4.049,605,3.466,606,2.421,607,2.421,608,2.421,609,2.421,610,2.421,611,2.421,612,2.421,613,2.421,614,1.975,615,2.421,616,2.421,617,2.421,618,2.421,619,3.466,620,2.421,621,2.421,622,2.421,623,2.421,624,4.42,625,2.421,626,2.421,627,2.421,628,2.421,629,2.421,630,2.421,631,2.827,632,2.827,633,2.421]],["title/modules.html",[69,1.636]],["body/modules.html",[32,0.039,41,2.665,67,0.039,68,0.039,69,1.852,70,2.665,80,2.346,367,3.601,614,3.601,634,4.415,635,4.415,636,5.122]],["title/overview.html",[637,3.182]],["body/overview.html",[0,0.133,1,1.448,32,0.044,45,0.381,46,0.314,47,1.117,55,1.125,57,1.269,59,1.269,61,1.125,62,1.269,64,1.269,67,0.033,68,0.033,69,1.811,70,3.555,71,1.574,72,2.726,73,2.32,74,2.32,75,2.726,76,2.726,77,2.726,78,2.726,79,2.726,80,2.542,81,2.888,82,2.888,83,3.522,84,2.32,85,2.32,150,1.251,172,2.017,191,0.693,369,3.522,370,3.522,637,2.726,638,3.341,639,3.341]],["title/routes.html",[150,1.46]],["body/routes.html",[32,0.04,67,0.04,68,0.04,150,1.71]],["title/miscellaneous/variables.html",[239,1.623,558,1.449]],["body/miscellaneous/variables.html",[7,0.317,27,0.614,30,2.049,31,1.054,32,0.044,33,3.066,34,3.066,43,0.533,67,0.033,68,0.033,85,2.346,128,2.534,146,2.311,203,2.04,205,2.346,239,1.592,241,3.339,242,2.346,270,2.04,275,3.02,438,2.903,484,3.339,532,2.756,533,2.756,534,2.756,535,3.923,558,2.04,593,2.756,631,2.756,632,2.756,640,4.349,641,3.379,642,3.379,643,3.379,644,3.379,645,3.379,646,5.078,647,4.349,648,3.379,649,3.379,650,3.379,651,3.379,652,3.379,653,3.379,654,3.379,655,3.379,656,3.379,657,3.379,658,3.379,659,3.379,660,3.379,661,3.379,662,3.379]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["0.2.3",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":369,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["1.0.5",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["1.copi",{"_index":595,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":370,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["2.0.0",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":639,"title":{},"body":{"overview.html":{}}}],["3.1.2",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["4.1.3",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":276,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["44",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":352,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["6.0.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":540,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["7",{"_index":638,"title":{},"body":{"overview.html":{}}}],["7/9",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["accessor",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{}}}],["activ",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedrout",{"_index":333,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":365,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["admin",{"_index":472,"title":{},"body":{"classes/User.html":{},"components/UsersComponent.html":{}}}],["aesthet",{"_index":328,"title":{},"body":{"components/HeaderComponent.html":{}}}],["aftel",{"_index":498,"title":{},"body":{"components/UsersComponent.html":{}}}],["angular",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"components/UsersComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compil",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular2",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["angularfontawesomemodul",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["anytim",{"_index":330,"title":{},"body":{"components/HeaderComponent.html":{}}}],["api",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["api/us",{"_index":488,"title":{},"body":{"injectables/UserService.html":{}}}],["apiurl",{"_index":631,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.compon",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["appmodul",{"_index":70,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":80,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architectur",{"_index":574,"title":{},"body":{"index.html":{}}}],["area",{"_index":442,"title":{},"body":{"components/SidebarComponent.html":{}}}],["array",{"_index":499,"title":{},"body":{"components/UsersComponent.html":{}}}],["artifact",{"_index":625,"title":{},"body":{"index.html":{}}}],["asset",{"_index":617,"title":{},"body":{"index.html":{}}}],["assign",{"_index":471,"title":{},"body":{"classes/User.html":{}}}],["auth",{"_index":448,"title":{},"body":{"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["authent",{"_index":206,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{}}}],["authenticationservic",{"_index":204,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":152,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["author",{"_index":366,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["auto",{"_index":299,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["automat",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["avail",{"_index":367,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"modules.html":{}}}],["awesom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["base",{"_index":490,"title":{},"body":{"components/UsersComponent.html":{},"index.html":{}}}],["bearer",{"_index":373,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["befor",{"_index":378,"title":{},"body":{"components/LoginComponent.html":{}}}],["below",{"_index":611,"title":{},"body":{"index.html":{}}}],["best",{"_index":564,"title":{},"body":{"index.html":{}}}],["between",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["boolean",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":636,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":624,"title":{},"body":{"index.html":{}}}],["buildapi",{"_index":629,"title":{},"body":{"index.html":{}}}],["busi",{"_index":578,"title":{},"body":{"index.html":{}}}],["c",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["canactiv",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(rout",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":444,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cascad",{"_index":317,"title":{},"body":{"components/FooterComponent.html":{}}}],["catcherror",{"_index":294,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cd",{"_index":619,"title":{},"body":{"index.html":{}}}],["chang",{"_index":603,"title":{},"body":{"index.html":{}}}],["class",{"_index":46,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodul",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":566,"title":{},"body":{"index.html":{}}}],["command",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["comment",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component({templateurl",{"_index":411,"title":{},"body":{"components/LoginComponent.html":{}}}],["component_templ",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["components/contents/contents.compon",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/contents/footer/footer.compon",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["components/contents/users/users.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["components/header/header.compon",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.compon",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/sidebar/sidebar.compon",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["config",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":345,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["consol",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(error",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["constant",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(auth",{"_index":449,"title":{},"body":{"components/SidebarComponent.html":{}}}],["constructor(authenticationservic",{"_index":281,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{}}}],["constructor(formbuild",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["constructor(rout",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(userservic",{"_index":495,"title":{},"body":{"components/UsersComponent.html":{}}}],["consum",{"_index":361,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["contain",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/UsersComponent.html":{}}}],["content",{"_index":267,"title":{},"body":{"components/ContentsComponent.html":{},"index.html":{}}}],["contents'},{'nam",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["contents.component.css",{"_index":268,"title":{},"body":{"components/ContentsComponent.html":{}}}],["contents.component.html",{"_index":269,"title":{},"body":{"components/ContentsComponent.html":{}}}],["contentscompon",{"_index":55,"title":{"components/ContentsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["context",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conveni",{"_index":406,"title":{},"body":{"components/LoginComponent.html":{}}}],["core",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":511,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["credenti",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{}}}],["css",{"_index":262,"title":{},"body":{"components/ContentsComponent.html":{},"components/FooterComponent.html":{}}}],["currentus",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":443,"title":{},"body":{"components/SidebarComponent.html":{}}}],["dashboard",{"_index":462,"title":{},"body":{"components/SidebarComponent.html":{}}}],["data",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["data.msg",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.token",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{}}}],["datasourc",{"_index":494,"title":{},"body":{"components/UsersComponent.html":{}}}],["db",{"_index":356,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["debug",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declar",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["default",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["depend",{"_index":71,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["desc",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["deserv",{"_index":347,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["design",{"_index":607,"title":{},"body":{"index.html":{}}}],["develop",{"_index":593,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["directive/pipe/service/class/modul",{"_index":622,"title":{},"body":{"index.html":{}}}],["directori",{"_index":605,"title":{},"body":{"index.html":{}}}],["dist",{"_index":626,"title":{},"body":{"index.html":{}}}],["distinguish",{"_index":357,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["document",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["download",{"_index":598,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":445,"title":{},"body":{"components/SidebarComponent.html":{},"dependencies.html":{}}}],["each",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["easi",{"_index":408,"title":{},"body":{"components/LoginComponent.html":{}}}],["easier",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effici",{"_index":569,"title":{},"body":{"index.html":{}}}],["element",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["email",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"components/UsersComponent.html":{}}}],["empti",{"_index":377,"title":{},"body":{"components/LoginComponent.html":{}}}],["enviroments/enviroment.t",{"_index":482,"title":{},"body":{"injectables/UserService.html":{}}}],["environ",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["environment.apiurl}/api/login",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["environments/environ",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["environmets.prod.t",{"_index":633,"title":{},"body":{"index.html":{}}}],["environmets.t",{"_index":630,"title":{},"body":{"index.html":{}}}],["err.error.messag",{"_index":302,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statu",{"_index":298,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":303,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":275,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["errorinterceptor",{"_index":81,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["etc",{"_index":592,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":209,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["execut",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{}}}],["exist",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{}}}],["export",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{},"overview.html":{}}}],["f",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{}}}],["fail",{"_index":278,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["fals",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["familiar",{"_index":610,"title":{},"body":{"index.html":{}}}],["featur",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["field",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["flag",{"_index":628,"title":{},"body":{"index.html":{}}}],["flex",{"_index":263,"title":{},"body":{"components/ContentsComponent.html":{}}}],["folder",{"_index":313,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["follow",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["footer",{"_index":260,"title":{},"body":{"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["footer'},{'nam",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.css",{"_index":321,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":322,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercompon",{"_index":57,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forc",{"_index":279,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["form",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{}}}],["formbuild",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["found",{"_index":363,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["frame",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["friendli",{"_index":608,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["full",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":135,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["gener",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["get",{"_index":454,"title":{"index.html":{}},"body":{"components/SidebarComponent.html":{}}}],["getf",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{}}}],["getter",{"_index":407,"title":{},"body":{"components/LoginComponent.html":{}}}],["gettoken",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getus",{"_index":479,"title":{},"body":{"injectables/UserService.html":{}}}],["getusernam",{"_index":211,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserrol",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getusers().subscribe(data",{"_index":503,"title":{},"body":{"components/UsersComponent.html":{}}}],["go",{"_index":380,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["goal",{"_index":562,"title":{},"body":{"index.html":{}}}],["grant",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{}}}],["graph",{"_index":614,"title":{},"body":{"index.html":{},"modules.html":{}}}],["guard",{"_index":172,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"index.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["header",{"_index":259,"title":{},"body":{"components/ContentsComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["header'},{'nam",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["header.component.css",{"_index":331,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":332,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":59,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helper",{"_index":616,"title":{},"body":{"index.html":{}}}],["helpers/error.interceptor",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["helpers/jwt.interceptor",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":422,"title":{},"body":{"components/LoginComponent.html":{}}}],["html",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":601,"title":{},"body":{"index.html":{}}}],["http://localhost:8000",{"_index":632,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["http_interceptor",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["httpclientmodul",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":290,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":286,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpinterceptor",{"_index":291,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":284,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://cli.angular.io",{"_index":589,"title":{},"body":{"index.html":{}}}],["https://nodejs.org",{"_index":588,"title":{},"body":{"index.html":{}}}],["id",{"_index":466,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["identifi",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":270,"title":{},"body":{"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["imag",{"_index":307,"title":{},"body":{"components/FooterComponent.html":{}}}],["impact",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["includ",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{}}}],["increas",{"_index":358,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["inject",{"_index":191,"title":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["injectable({providedin",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["insid",{"_index":312,"title":{},"body":{"components/FooterComponent.html":{}}}],["instal",{"_index":584,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":280,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":283,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":272,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interfac",{"_index":582,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":423,"title":{},"body":{"components/LoginComponent.html":{}}}],["isol",{"_index":316,"title":{},"body":{"components/FooterComponent.html":{}}}],["iter",{"_index":500,"title":{},"body":{"components/UsersComponent.html":{}}}],["js",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":350,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["jwt",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"dependencies.html":{}}}],["jwt](https://jwt.io",{"_index":368,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["jwthelperservic",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwtinterceptor",{"_index":82,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["jwtmodul",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["keep",{"_index":577,"title":{},"body":{"index.html":{}}}],["layer",{"_index":580,"title":{},"body":{"index.html":{}}}],["layout",{"_index":264,"title":{},"body":{"components/ContentsComponent.html":{}}}],["left",{"_index":327,"title":{},"body":{"components/HeaderComponent.html":{}}}],["legend",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["librari",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["link",{"_index":325,"title":{},"body":{"components/HeaderComponent.html":{}}}],["list",{"_index":381,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["load",{"_index":383,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["local",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorag",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/functions.html":{}}}],["localstorage.getitem('currentus",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["localstorage.getitem(token_nam",{"_index":255,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(token_nam",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(token_nam",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["location.reload(tru",{"_index":301,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["log",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["loggin",{"_index":505,"title":{},"body":{"components/UsersComponent.html":{}}}],["logic",{"_index":579,"title":{},"body":{"index.html":{}}}],["login",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["login(email",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":382,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":61,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":384,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":441,"title":{},"body":{"components/SidebarComponent.html":{}}}],["logout",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["maintain",{"_index":568,"title":{},"body":{"index.html":{}}}],["make",{"_index":349,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["manag",{"_index":274,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["match",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["md5",{"_index":409,"title":{},"body":{"components/LoginComponent.html":{},"dependencies.html":{}}}],["md5.init(this.f.password.valu",{"_index":427,"title":{},"body":{"components/LoginComponent.html":{}}}],["messag",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["method",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["mim",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["miscellan",{"_index":558,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":465,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["modifi",{"_index":353,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["modul",{"_index":69,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modular",{"_index":359,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["multi",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["mvc",{"_index":342,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["namebuild",{"_index":623,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":440,"title":{},"body":{"components/SidebarComponent.html":{}}}],["navig",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["need",{"_index":344,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["nest",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["new",{"_index":536,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["next",{"_index":285,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["next.handle(request",{"_index":374,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":297,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ngmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":271,"title":{},"body":{"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["nodej",{"_index":587,"title":{},"body":{"index.html":{}}}],["npm",{"_index":597,"title":{},"body":{"index.html":{}}}],["number",{"_index":469,"title":{},"body":{"classes/User.html":{}}}],["object",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":289,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["offer",{"_index":567,"title":{},"body":{"index.html":{}}}],["on",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["oninit",{"_index":266,"title":{},"body":{"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["onsubmit",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{}}}],["opportun",{"_index":606,"title":{},"body":{"index.html":{}}}],["oppos",{"_index":341,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["option",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["option.email",{"_index":508,"title":{},"body":{"components/UsersComponent.html":{}}}],["option.id",{"_index":506,"title":{},"body":{"components/UsersComponent.html":{}}}],["option.nam",{"_index":507,"title":{},"body":{"components/UsersComponent.html":{}}}],["option.rol",{"_index":509,"title":{},"body":{"components/UsersComponent.html":{}}}],["option.telephon",{"_index":510,"title":{},"body":{"components/UsersComponent.html":{}}}],["ou",{"_index":473,"title":{},"body":{"classes/User.html":{}}}],["out",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outcal",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["outlet",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["overlap",{"_index":320,"title":{},"body":{"components/FooterComponent.html":{}}}],["overview",{"_index":637,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":538,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["param",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["paramet",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["pass",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{}}}],["password",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{}}}],["path",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permit",{"_index":483,"title":{},"body":{"injectables/UserService.html":{}}}],["pleas",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plot",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["practic",{"_index":565,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":319,"title":{},"body":{"components/FooterComponent.html":{}}}],["previous",{"_index":586,"title":{},"body":{"index.html":{}}}],["privat",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["prod",{"_index":627,"title":{},"body":{"index.html":{}}}],["product",{"_index":484,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["project/src/app/components/cont",{"_index":620,"title":{},"body":{"index.html":{}}}],["project/src/app/components/contentsrun",{"_index":621,"title":{},"body":{"index.html":{}}}],["properti",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["propos",{"_index":343,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["protect",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["provid",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["providedin",{"_index":485,"title":{},"body":{"injectables/UserService.html":{}}}],["public",{"_index":346,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["purpos",{"_index":329,"title":{},"body":{"components/HeaderComponent.html":{}}}],["qualiti",{"_index":572,"title":{},"body":{"index.html":{}}}],["queryparam",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reactiveformsmodul",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["reason",{"_index":362,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["recommend",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["redirect",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relat",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":602,"title":{},"body":{"index.html":{}}}],["rememb",{"_index":309,"title":{},"body":{"components/FooterComponent.html":{}}}],["remov",{"_index":233,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{}}}],["report",{"_index":338,"title":{},"body":{"components/HeaderComponent.html":{}}}],["request",{"_index":288,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{}}}],["request.clon",{"_index":371,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requir",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["resourc",{"_index":453,"title":{},"body":{"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["respons",{"_index":277,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["rest",{"_index":575,"title":{},"body":{"index.html":{}}}],["result",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["returnurl",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reusabl",{"_index":360,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["right",{"_index":324,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rol",{"_index":452,"title":{},"body":{"components/SidebarComponent.html":{},"classes/User.html":{}}}],["role",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"components/UsersComponent.html":{}}}],["root",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["root'},{'nam",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["rout",{"_index":150,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing.modul",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rule",{"_index":311,"title":{},"body":{"components/FooterComponent.html":{}}}],["run",{"_index":596,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":293,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":295,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["scaffold",{"_index":618,"title":{},"body":{"index.html":{}}}],["scene",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["schedul",{"_index":337,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scheme",{"_index":613,"title":{},"body":{"index.html":{}}}],["score",{"_index":339,"title":{},"body":{"components/HeaderComponent.html":{}}}],["screen",{"_index":265,"title":{},"body":{"components/ContentsComponent.html":{},"components/UsersComponent.html":{}}}],["screenshot",{"_index":583,"title":{},"body":{"index.html":{}}}],["section",{"_index":326,"title":{},"body":{"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["secur",{"_index":348,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["send",{"_index":379,"title":{},"body":{"components/LoginComponent.html":{}}}],["separ",{"_index":355,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["serv",{"_index":599,"title":{},"body":{"index.html":{}}}],["server",{"_index":594,"title":{},"body":{"index.html":{}}}],["servic",{"_index":207,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["services/authentication.servic",{"_index":296,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/user.servic",{"_index":501,"title":{},"body":{"components/UsersComponent.html":{}}}],["set",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["sethead",{"_index":372,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["settoken",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["settoken(token",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sever",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sheet",{"_index":318,"title":{},"body":{"components/FooterComponent.html":{}}}],["show",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["shown",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["sidebar",{"_index":258,"title":{},"body":{"components/ContentsComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["sidebar'},{'nam",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["sidebar.component.css",{"_index":446,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":447,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcompon",{"_index":62,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpl",{"_index":261,"title":{},"body":{"components/ContentsComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["singl",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["small",{"_index":612,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":571,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["spa",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["spec\\.t",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{}}}],["src",{"_index":615,"title":{},"body":{"index.html":{}}}],["src/.../app.module.t",{"_index":559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authentication.service.t",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/contents/contents.component.t",{"_index":256,"title":{},"body":{"components/ContentsComponent.html":{},"coverage.html":{}}}],["src/app/components/contents/footer/footer.component.t",{"_index":305,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/contents/users/users.component.t",{"_index":489,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/components/contents/users/users.component.ts:17",{"_index":496,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/contents/users/users.component.ts:31",{"_index":497,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/header/header.component.t",{"_index":323,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:15",{"_index":334,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:33",{"_index":335,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":375,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:14",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:37",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:63",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.t",{"_index":439,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:16",{"_index":456,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:20",{"_index":450,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:25",{"_index":455,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:31",{"_index":451,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/guards/auth.guard.t",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:18",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:8",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/helpers/error.interceptor.t",{"_index":273,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/error.interceptor.ts:13",{"_index":282,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/error.interceptor.ts:17",{"_index":287,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/jwt.interceptor.t",{"_index":340,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/helpers/jwt.interceptor.ts:24",{"_index":364,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/models/user.t",{"_index":464,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:12",{"_index":470,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:13",{"_index":474,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:14",{"_index":468,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:15",{"_index":475,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:16",{"_index":476,"title":{},"body":{"classes/User.html":{}}}],["src/app/services/authentication.service.t",{"_index":205,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:16",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:27",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:44",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:50",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:57",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:64",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/user.service.t",{"_index":478,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:12",{"_index":480,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:17",{"_index":481,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.t",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalon",{"_index":315,"title":{},"body":{"components/FooterComponent.html":{}}}],["standard",{"_index":573,"title":{},"body":{"index.html":{}}}],["start",{"_index":560,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statement",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":416,"title":{},"body":{"components/LoginComponent.html":{}}}],["stop",{"_index":421,"title":{},"body":{"components/LoginComponent.html":{}}}],["storag",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["store",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["string",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":563,"title":{},"body":{"index.html":{}}}],["strongli",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["structur",{"_index":604,"title":{},"body":{"index.html":{}}}],["style",{"_index":310,"title":{},"body":{"components/FooterComponent.html":{}}}],["styleurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["stylish",{"_index":308,"title":{},"body":{"components/FooterComponent.html":{}}}],["submit",{"_index":385,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscrib",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{}}}],["success",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"miscellaneous/functions.html":{}}}],["such",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":634,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":635,"title":{},"body":{"modules.html":{}}}],["system",{"_index":585,"title":{},"body":{"index.html":{}}}],["tab",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["tabl",{"_index":491,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":463,"title":{},"body":{"components/SidebarComponent.html":{}}}],["telephon",{"_index":467,"title":{},"body":{"classes/User.html":{},"components/UsersComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["termin",{"_index":600,"title":{},"body":{"index.html":{}}}],["text",{"_index":306,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.auth.getusernam",{"_index":461,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.auth.getuserrol",{"_index":459,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authenticationservice.login(this.f.username.valu",{"_index":426,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.logout",{"_index":300,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["this.authenticationservice.settoken(data.token",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.datasourc",{"_index":504,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.error",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":413,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.http.get",{"_index":486,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwthelperservice.decodetoken",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwthelperservice.decodetoken(this.gettoken",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.load",{"_index":425,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform",{"_index":412,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.control",{"_index":419,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":424,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.nam",{"_index":460,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.returnurl",{"_index":417,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.rol",{"_index":458,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":418,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate([this.returnurl",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":336,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.submit",{"_index":420,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tokendeco",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.url",{"_index":487,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservic",{"_index":502,"title":{},"body":{"components/UsersComponent.html":{}}}],["through",{"_index":576,"title":{},"body":{"index.html":{}}}],["throw",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throwerror",{"_index":292,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":304,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["titl",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["tne",{"_index":457,"title":{},"body":{"components/SidebarComponent.html":{}}}],["token",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{}}}],["token.nam",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["token.rol",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["token_nam",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokendeco",{"_index":210,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tokengett",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":354,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":410,"title":{},"body":{"components/LoginComponent.html":{},"dependencies.html":{}}}],["ui",{"_index":581,"title":{},"body":{"index.html":{}}}],["unauthor",{"_index":208,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["url",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["us",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["usabl",{"_index":570,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":65,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["usernam",{"_index":414,"title":{},"body":{"components/LoginComponent.html":{}}}],["users.component.css",{"_index":492,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.html",{"_index":493,"title":{},"body":{"components/UsersComponent.html":{}}}],["userscompon",{"_index":64,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userservic",{"_index":477,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["valid",{"_index":376,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.requir",{"_index":415,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ContentsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["variabl",{"_index":239,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":609,"title":{},"body":{"index.html":{}}}],["verif",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{}}}],["verifi",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["version",{"_index":561,"title":{},"body":{"index.html":{}}}],["visualstudio",{"_index":591,"title":{},"body":{"index.html":{}}}],["void",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/UsersComponent.html":{}}}],["web",{"_index":351,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["websorm",{"_index":590,"title":{},"body":{"index.html":{}}}],["whitelisteddomain",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["work",{"_index":314,"title":{},"body":{"components/FooterComponent.html":{}}}],["wrapper",{"_index":257,"title":{},"body":{"components/ContentsComponent.html":{}}}],["your_compon",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["zone",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["zone.run",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zonedelegate.invoketask",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This Main Component contains the router outlet.\nThis router outlet is the scene plot where our SPA shows the features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'mim-frontend'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                        This is the main Title of Application. This title is shown in the browser tab.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n/**\n * This Main Component contains the router outlet.\n * This router outlet is the scene plot where our SPA shows the features.\n */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   * This is the main Title of Application. This title is shown in the browser tab.\n   */\n  title = 'mim-frontend';\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContentsComponent', 'selector': 'app-contents'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContentsComponent\n\nContentsComponent\n\nAppModule -->\n\nContentsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ContentsComponent\n                            \n                            \n                                FooterComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UsersComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ErrorInterceptor\n                            \n                            \n                                     JwtInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /**\n * In this file must be imported all dependencies or libraries used in the project.\n * One declaration for each Component. If your are using CLI Commands (ng g c your_component)\n * declaration are included automatically. We recommend strongly use of CLI commands to create Angular Components.\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/contents/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ContentsComponent } from './components/contents/contents.component';\nimport {AngularFontAwesomeModule} from 'angular-font-awesome';\nimport { UsersComponent } from './components/contents/users/users.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {JwtInterceptor} from './helpers/jwt.interceptor';\nimport {ErrorInterceptor} from './helpers/error.interceptor';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport {environment} from '../environments/environment';\n/**\n * Get the token from localStorage. This token is generated when user login is successful.\n */\nexport function gettoken() {\n  return localStorage.getItem('currentUser');\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    SidebarComponent,\n    ContentsComponent,\n    UsersComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AngularFontAwesomeModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: gettoken,\n        whitelistedDomains: [environment.apiURL]\n      }\n    })\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        \nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\nimport {ContentsComponent} from './components/contents/contents.component';\nimport {AuthGuard} from './guards/auth.guard';\n\n/**\n * SPA (Single Page Application) use a set of routes to navigate between pages or call componentes.\n *In this file you define which routes call Angular Components or Set of nested Components\n * canActivate: [AuthGuard] set the route protected by token and Credential verification\n */\nconst routes: Routes = [\n  {path: 'users', component: ContentsComponent, pathMatch: 'full', canActivate: [AuthGuard]},\n  {path: 'login', component: LoginComponent, pathMatch: 'full'},\n  {path: '', redirectTo: '/users', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    This Guard verify if the routes are protected. In the routing file, you can set AuthGuard->activated to grant access to routes only to logged users\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:18\n                            \n                        \n\n\n                \n                    \n                            desc\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                injects the routing. For protected routes Activate\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                injects the routing State\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\n\n/**\n * This Guard verify if the routes are protected. In the routing file, you can set AuthGuard->activated to grant access to routes only to logged users\n */\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  /**\n   * desc\n   * @param route injects the routing. For protected routes Activate\n   * @param state injects the routing State\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('currentUser')) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                This authentication service protect angular components and routes from unauthorized access.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tokenDeco\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                getUserName\n                            \n                            \n                                getUserRol\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, jwtHelperService: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelperService\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Get the token form localStorage\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Get the user Name form decoded token\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserRol\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserRol()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Get the user Role form decoded token\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Outcall to API verifing user and password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Remove user from local storage to log user outcall to API verifing user and password\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetToken(token: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Set user from local storage to log user outcall to API verifing user and password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenDeco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenDeco:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:16\n                            \n                        \n\n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        tokenDeco\n                                                        \n                                                                Variable where the token decoded is stored. You can get the Name and the Role from this decoded token.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\nexport const TOKEN_NAME = 'currentUser';\n/**\n * This authentication service protect angular components and routes from unauthorized access.\n * @param TOKEN_NAME constant used in several methods to name the localStorage variable.\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  /**\n   * @param tokenDeco Variable where the token decoded is stored. You can get the Name and the Role from this decoded token.\n   */\n  tokenDeco: any;\n\n  constructor(\n    private http: HttpClient,\n    private jwtHelperService: JwtHelperService\n  ) {\n    this.tokenDeco = this.jwtHelperService.decodeToken();\n  }\n  /**\n   * Outcall to API verifing user and password\n   */\n  login(email: string, password: string) {\n    this.tokenDeco = this.jwtHelperService.decodeToken();\n    return this.http.post(\n      `${environment.apiURL}/api/login`,\n      {email, password});\n\n  }\n\n  /**\n   * Remove user from local storage to log user outcall to API verifing user and password\n   */\n  logout() {\n    localStorage.removeItem(TOKEN_NAME);\n  }\n  /**\n   * Set user from local storage to log user outcall to API verifing user and password\n   */\n  setToken(token) {\n    localStorage.setItem(TOKEN_NAME, token);\n  }\n  /**\n   * Get the user Role form decoded token\n   */\n  getUserRol() {\n    const token = this.jwtHelperService.decodeToken(this.getToken());\n    return token.role;\n  }\n  /**\n   * Get the user Name form decoded token\n   */\n  getUserName() {\n    const token = this.jwtHelperService.decodeToken(this.getToken());\n    return token.name;\n  }\n  /**\n   * Get the token form localStorage\n   */\n  getToken(): string {\n    return localStorage.getItem(TOKEN_NAME);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentsComponent.html":{"url":"components/ContentsComponent.html","title":"component - ContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contents/contents.component.ts\n\n\n    \n        Description\n    \n    \n        This is wrapper Component contains the sidebar, header and footer Components.\nHas a simple CSS FLEX to layout on screen the elements .\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contents\n            \n\n            \n                styleUrls\n                contents.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contents.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * This is wrapper Component contains the sidebar, header and footer Components.\n * Has a simple CSS FLEX to layout on screen the elements .\n */\n@Component({\n  selector: 'app-contents',\n  templateUrl: './contents.component.html',\n  styleUrls: ['./contents.component.css']\n})\nexport class ContentsComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n            \n          \n\n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContentsComponent', 'selector': 'app-contents'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Manage error if API returns 401 response. If API fails force the logout and return error\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/helpers/error.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/helpers/error.interceptor.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpRequest, HttpHandler, HttpEvent, HttpInterceptor} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\nimport {AuthenticationService} from '../services/authentication.service';\n\n/**\n * Manage error if API returns 401 response. If API fails force the logout and return error\n *\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.authenticationService.logout();\n        location.reload(true);\n      }\n\n      const error = err.error.message || err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contents/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        This FOOTER Component contains the text for page footer.\nYou can set text, images or stylish by CSS. Other Components can be set in this footer.\nRemember: All CSS styles rules must be set inside the component folder. The file for CSS works as a standalone isolated Cascading Style Sheet and prevents the overlap of CSS rules.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * This FOOTER Component contains the text for page footer.\n * You can set text, images or stylish by CSS. Other Components can be set in this footer.\n * Remember: All CSS styles rules must be set inside the component folder. The file for CSS works as a standalone isolated Cascading Style Sheet and prevents the overlap of CSS rules.\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() {\n\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        MIM footer\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'MIM footer'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContentsComponent', 'selector': 'app-contents'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header Component contains at right the logout link and a example of Section Links at left.\nThe example LINKS at left is only for aesthetic purposes and can be removed anytime.\nLogout link does not have to be removed .\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:15\n                            \n                        \n\n                \n                    \n                            Injects authenticationService and routing protection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/header/header.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            This method do logout and return to login URL\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n/**\n * Header Component contains at right the logout link and a example of Section Links at left.\n * The example LINKS at left is only for aesthetic purposes and can be removed anytime.\n * Logout link does not have to be removed .\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  /**\n   * Injects authenticationService and routing protection\n   */\n  constructor(\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n  /**\n   * This method do logout and return to login URL\n   */\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigateByUrl('/login');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        MIM\n      \n    \n    \n      \n        \n          Schedule\n\n          \n        \n        \n          \n            Reports\n        \n        \n          \n            Score\n        \n      \n      \n        Logout\n          \n        \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            MIM                                      Schedule                                                Reports                                      Score                            Logout                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContentsComponent', 'selector': 'app-contents'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/jwt.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Opposed to the MVC proposal with private calls, we need to connect to a public API and it deserve a credentialed and secure call.\nWe make this calls to API with a JWT (JSON Web Token).\nAngular 6 has a method to intercept all the request and modify the http header authentication including the access token generated in an successful login call.\nA simple login form has two separated function:\n\nVerify user and password in DB\nGenerate a JWT token\n\nAngular 6 distinguishes components from services to increase modularity and reusability. Components consume services, that is, you can inject a Service into a Component as a Dependency.\nFor this reason you can found the Services in Injectables Section.\nTo connect with API we use Service\nThis Token will be included in all http headers\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/helpers/jwt.interceptor.ts:24\n                            \n                        \n\n\n                \n                    \n                            Add authorization header with jwt token if available\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Opposed to the MVC proposal with private calls, we need to connect to a public API and it deserve a credentialed and secure call.\n We make this calls to API with a [JWT](https://jwt.io/) (JSON Web Token).\n Angular 6 has a method to intercept all the request and modify the http header authentication including the access token generated in an successful login call.\n A simple login form has two separated function:\n 1. Verify user and password in DB\n 2. Generate a JWT token\n\n Angular 6 distinguishes components from services to increase modularity and reusability. Components consume services, that is, you can inject a Service into a Component as a Dependency.\n For this reason you can found the Services in Injectables Section.\n To connect with API we use Service\n This Token will be included in all http headers\n *\n */\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  /**\n   * Add authorization header with jwt token if available\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    const currentUser = localStorage.getItem('currentUser');\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        This Component has a login Form with Validation. Validates if user and password are empty before send the request.\nIf valid user create the token and go to USERS LIST by default.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects formBuilder for validate Forms.\nInjects route and router for navigation and protect routes by token.\nInjects authenticationService for login or logout calls.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Set the fields on form to validate. Validate if user and password are empty.\nReset the token every call by logout() method.\nGet return url from route parameters\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            If form submit execute the validation. Shows the loading spinner.\nIf valid form, call to authenticationService passing email and password to API.\nIf valid user create the token and go to USERS LIST by default.\nShow error messages if API fails or user not valid.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        returnUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:53\n                                \n                            \n                    \n                        \n                                Convenience getter for easy access to form fields\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {Md5} from 'md5-typescript';\n\n/**\n * This Component has a login Form with Validation. Validates if user and password are empty before send the request.\n * If valid user create the token and go to USERS LIST by default.\n */\n\n@Component({templateUrl: 'login.component.html'})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n\n  /**\n   * Injects formBuilder for validate Forms.\n   * Injects route and router for navigation and protect routes by token.\n   * Injects authenticationService for login or logout calls.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService) {\n  }\n\n  /**\n   * Set the fields on form to validate. Validate if user and password are empty.\n   * Reset the token every call by logout() method.\n   * Get return url from route parameters\n   */\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // reset login status\n    this.authenticationService.logout();\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/users';\n  }\n\n  /**\n   * Convenience getter for easy access to form fields\n   */\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  /**\n   * If form submit execute the validation. Shows the loading spinner.\n   * If valid form, call to authenticationService passing email and password to API.\n   * If valid user create the token and go to USERS LIST by default.\n   * Show error messages if API fails or user not valid.\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.username.value, Md5.init(this.f.password.value))\n      .subscribe(\n        data => {\n          if (data.token) {\n            // go to main URL if token exists\n            this.authenticationService.setToken(data.token);\n            this.router.navigate([this.returnUrl]);\n          } else {\n            // show the error message if credentials are invalid\n            this.error = data.msg;\n            this.loading = false;\n          }\n        },\n        error => {\n          // show error in console if API sends error\n          this.error = error;\n          this.loading = false;\n          console.log(error);\n\n        });\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n        Username\n        \n        \n          Username is required\n        \n      \n      \n        Password\n        \n        \n          Password is required\n        \n      \n      \n        Login\n        \n      \n      {{error}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                  Username                          Username is required                            Password                          Password is required                            Login                    {{error}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContentsComponent', 'selector': 'app-contents'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidebar/sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        This Component show a NAVBAR with the list of components. Logo area to customize and User card with dynamic name and role\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidebar/sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                            Injects the AuthenticationService into the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Set user name and rol after load resources. Name and Role are getting from Token\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:16\n                            \n                        \n\n                \n                    \n                        Public Variable for User name. It shows the user name in the sidebar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                        Public Variable for User rol. It shows tne user role in the sidebar.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../services/authentication.service';\n/**\n * This Component show a NAVBAR with the list of components. Logo area to customize and User card with dynamic name and role\n */\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  /**\n   * Public Variable for User name. It shows the user name in the sidebar.\n   */\n  name: string;\n  /**\n   * Public Variable for User rol. It shows tne user role in the sidebar.\n   */\n  role: string;\n  /**\n   * Injects the AuthenticationService into the component\n   */\n  constructor(\n    public auth: AuthenticationService\n  ) {\n  }\n  /**\n   * Set user name and rol after load resources. Name and Role are getting from Token\n   */\n  ngOnInit() {\n    this.role = this.auth.getUserRol();\n    this.name = this.auth.getUserName();\n  }\n\n}\n\n\n    \n\n    \n        \n      \n        \n          \n        \n        \n          {{name}}\n          \n            {{role}}\n            \n          \n        \n      \n\n  \n    \n      \n        \n        Dashboard\n      \n    \n    \n      \n        \n        Users\n      \n    \n    \n      \n        \n        Tasks\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{name}}                      {{role}}                                                                Dashboard                                    Users                                    Tasks            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContentsComponent', 'selector': 'app-contents'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n            \n                Description\n            \n            \n                This class defines the USER MODEL.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                            \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:12\n                            \n                        \n\n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        id\n                                                        \n                                                                index number assigned by DB\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                        \n                                                                user name\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                        \n                                                                user email\n\n                                                        \n                                                \n                                                \n                                                        role\n                                                        \n                                                                user rol. May be admin ou user\n\n                                                        \n                                                \n                                                \n                                                        telephone\n                                                        \n                                                                user telephone\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telephone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        telephone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * @param id index number assigned by DB\n   * @param name user name\n   * @param email user email\n   * @param role user rol. May be admin ou user\n   * @param telephone user telephone\n   */\n  id: number;\n  name: string;\n  email: string;\n  role: string;\n  telephone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                This user service get a USERS LIST from DB.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/user.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiURL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\n/**\n * This user service get a USERS LIST from DB.\n * @param url can be set in enviroments/enviroment.ts. It permits two URL: one for production and other for\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  url = environment.apiURL;\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getUsers(): any {\n    return this.http.get(\n      this.url + 'api/users');\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contents/users/users.component.ts\n\n\n    \n        Description\n    \n    \n        This Component contains Listing of USERS.\nScreen the elements in Data Base of USERS Table.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contents/users/users.component.ts:17\n                            \n                        \n\n                \n                    \n                            Injects the service  userService  into the Component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contents/users/users.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Aftel load all resources use a Service to call to API.\nThe result (data) is an Array with a set of all the user in Data Base\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contents/users/users.component.ts:17\n                            \n                        \n\n                \n                    \n                        Public variable to be used for generate the angular iteration on User Table.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../../services/user.service';\n\n/**\n * This Component contains Listing of USERS.\n * Screen the elements in Data Base of USERS Table.\n */\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  /**\n   * Public variable to be used for generate the angular iteration on User Table.\n   */\n  dataSource: any;\n\n  /**\n   * Injects the service  userService  into the Component.\n   */\n  constructor(\n    private userService: UserService\n  ) {\n  }\n\n  /**\n   * Aftel load all resources use a Service to call to API.\n   * The result (data) is an Array with a set of all the user in Data Base\n   */\n  ngOnInit() {\n    // load user list\n    this.userService\n      .getUsers().subscribe(data => {\n      this.dataSource = data;\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    USERS\n    \n      Loggin as\n      Admin\n    \n    \n      \n        \n        \n          #\n           Name \n          Email \n          Role\n          Telephone\n        \n        \n        \n\n        \n          {{option.id}}\n          {{option.name}}\n          {{option.email}}\n          {{option.role}}\n          {{option.telephone}}\n        \n\n        \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      USERS          Loggin as      Admin                                        #           Name           Email           Role          Telephone                                          {{option.id}}          {{option.name}}          {{option.email}}          {{option.role}}          {{option.telephone}}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContentsComponent', 'selector': 'app-contents'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                gettoken\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/contents/contents.component.ts\n            \n            \n                component\n            \n            \n                ContentsComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/contents/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/contents/users/users.component.ts\n            \n            \n                component\n            \n            \n                UsersComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/components/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                variable\n            \n            \n                TOKEN_NAME\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            angular-font-awesome : ^3.1.2\n        \n            angular2-jwt : ^0.2.3\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            font-awesome : ^4.7.0\n        \n            jwt-decode : ^2.2.0\n        \n            md5-typescript : ^1.0.5\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            gettoken   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gettoken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngettoken()\n                    \n                \n\n\n\n\n                \n                    \n                            Get the token from localStorage. This token is generated when user login is successful.\n\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMIM Frontend\nDescription\nThis project was generated with Angular CLI version 6.1.0.\nThe goal is to show a strong, secure and best practices coding. \nWe offer an example of maintainability, dependability, efficiency and usability as a Software Quality Standards.\nOur architecture is based in a Frontend App connecting with a RESTful API through JSON calls.\nThis architecture keeps separate the business logic layer and data access layer from the UI (User Interface).\nScreenshots\n\n\n\nLogin page\nUsers page\n\n\n\n\n\n\n\n\n\nINSTALLATION\nSystem Requirements\nInstalled previously\n\n[NodeJs] (https://nodejs.org/)\n[Angular 6] (https://cli.angular.io/)\nIDE (WebSorm, VisualStudio Code, etc)\n\nDevelopment Server\n1.Copy the project in a folder\n\nGet dependencies from providers. Run npm install to start download.\nnpm install\nRun ng serve from terminal. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nng serve\n\nDEVELOPMENT\nFolder structure\n The project has a structure of directories opportunely designed to be friendly and very accessible for developers familiar with angular structures. \n However, below we show a small scheme to graph the nested folders:\nsrc  ├──app  │     ├──components  │     │        ├──contents  │     │        │        ├──footer  │     │        │        └──users  │     │        ├──header  │     │        ├──login  │     │        └──sidebar  │     ├──guards  │     ├──helpers  │     ├──models  │     └──services  ├──assets  └──environments \nCode scaffolding\nNew components must be created in the CONTENTS folder. Go to Terminal and run cd my-project/src/app/components/contents\ncd my-project/src/app/components/contentsRun ng generate component component-name to generate a new component. You can also use ng generate directive/pipe/service/class/module.  \nng generate component component-nameBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nng buildAPI URL\nGo to environmets.ts and set the API URL for DEVELOPMENT\nexport const environment = {\n  production: false,\n  apiURL : 'http://localhost:8000/'\n};Go to environmets.prod.ts and set the API URL for PRODUCTION\nexport const environment = {\n  production: true,\n  apiURL : 'http://localhost:8000/'\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContentsComponent\n\nContentsComponent\n\nAppModule -->\n\nContentsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TOKEN_NAME   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiURL : 'http://localhost:8000/'\n}\n                        \n                    \n\n                \n                    \n                        In development mode, to ignore zone related error stack frames such as\nzone.run, zoneDelegate.invokeTask for easier debugging, you can\nimport the following file, but please comment it out in production mode\nbecause it will have performance impact when throw error\n\n                    \n                \n\n            \n        \n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'currentUser'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
